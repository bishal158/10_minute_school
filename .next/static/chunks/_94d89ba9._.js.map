{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///F:/MY%20CLASS/ALL%20OF%20MY%20PROJECTS/10_min_school_assesment/lib/api.ts"],"sourcesContent":["import axios from 'axios';\r\n// Create base instance\r\nconst api = axios.create({\r\n    baseURL: process.env.NEXT_PUBLIC_API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n    },\r\n});\r\n// Add interceptor to inject language\r\napi.interceptors.request.use(config => {\r\n    // For client-side requests, we'll get language from localStorage\r\n    // For server-side, we'll handle differently (shown later)\r\n    if (typeof window !== 'undefined') {\r\n        const lang = localStorage.getItem('lang') || 'en';\r\n        config.params = {\r\n            ...config.params,\r\n            lang,\r\n        };\r\n    }\r\n    return config;\r\n});\r\n\r\nexport default api;"],"names":[],"mappings":";;;AAGa;AAHb;;AACA,uBAAuB;AACvB,MAAM,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACrB,OAAO;IACP,SAAS;QACL,gBAAgB;QAChB,QAAQ;IACZ;AACJ;AACA,qCAAqC;AACrC,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IACzB,iEAAiE;IACjE,0DAA0D;IAC1D,wCAAmC;QAC/B,MAAM,OAAO,aAAa,OAAO,CAAC,WAAW;QAC7C,OAAO,MAAM,GAAG;YACZ,GAAG,OAAO,MAAM;YAChB;QACJ;IACJ;IACA,OAAO;AACX;uCAEe","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///F:/MY%20CLASS/ALL%20OF%20MY%20PROJECTS/10_min_school_assesment/utils/api.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport api from \"@/lib/api\";\r\nimport {  ProductData } from \"@/types/types\";\r\n\r\nexport const fetchProducts = async (\r\n  params?: Record<string, any>\r\n): Promise<ProductData> => {\r\n  // Check if running in browser environment before accessing localStorage\r\n  let lang = \"en\";\r\n  if (typeof window !== \"undefined\") {\r\n    lang = localStorage.getItem(\"lang\") || \"en\";\r\n  }\r\n\r\n  const response = await api.get(\"/products/ielts-course\", {\r\n    headers: {\r\n      \"X-TENMS-SOURCE-PLATFORM\": \"web\",\r\n      Accept: \"application/json\",\r\n    },\r\n    params: { ...params, lang },\r\n  });\r\n  return response.data?.data;\r\n};\r\n"],"names":[],"mappings":"AAAA,qDAAqD;;;AACrD;;AAGO,MAAM,gBAAgB,OAC3B;QAeO;IAbP,wEAAwE;IACxE,IAAI,OAAO;IACX,wCAAmC;QACjC,OAAO,aAAa,OAAO,CAAC,WAAW;IACzC;IAEA,MAAM,WAAW,MAAM,6GAAA,CAAA,UAAG,CAAC,GAAG,CAAC,0BAA0B;QACvD,SAAS;YACP,2BAA2B;YAC3B,QAAQ;QACV;QACA,QAAQ;YAAE,GAAG,MAAM;YAAE;QAAK;IAC5B;IACA,QAAO,iBAAA,SAAS,IAAI,cAAb,qCAAA,eAAe,IAAI;AAC5B","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///F:/MY%20CLASS/ALL%20OF%20MY%20PROJECTS/10_min_school_assesment/components/home/HomeClient.tsx"],"sourcesContent":["\"use client\"\r\nimport { useLang } from \"@/hooks/useLang\"\r\nimport { ProductData } from \"@/types/types\"\r\nimport { fetchProducts } from \"@/utils/api\"\r\nimport { useQuery } from \"@tanstack/react-query\"\r\n\r\nconst HomeClient = ({\r\n    initialData\r\n}: {\r\n    initialData: ProductData\r\n}) => {\r\n    const { lang } = useLang()\r\n    const { data } = useQuery<ProductData>({\r\n        queryKey: [\"Product\", lang],\r\n        queryFn: fetchProducts,\r\n        initialData: initialData,\r\n    })\r\n    console.log(\"Fetched Data:\", data)\r\n    return (\r\n        <>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeClient"],"names":[],"mappings":";;;;AACA;AAEA;AACA;;;AAJA;;;;AAMA,MAAM,aAAa;QAAC,EAChB,WAAW,EAGd;;IACG,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,mHAAA,CAAA,UAAO,AAAD;IACvB,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAe;QACnC,UAAU;YAAC;YAAW;SAAK;QAC3B,SAAS,+GAAA,CAAA,gBAAa;QACtB,aAAa;IACjB;IACA,QAAQ,GAAG,CAAC,iBAAiB;IAC7B,qBACI;AAIR;GAjBM;;QAKe,mHAAA,CAAA,UAAO;QACP,8KAAA,CAAA,WAAQ;;;KANvB;uCAmBS","debugId":null}}]
}