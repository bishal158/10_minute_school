{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///F:/MY%20CLASS/ALL%20OF%20MY%20PROJECTS/10_min_school_assesment/context/index.ts"],"sourcesContent":["import { LangType } from \"@/types/types\";\r\nimport { createContext } from \"react\";\r\n\r\ntype LangContextType = {\r\n    lang: LangType;\r\n    toggleLang: () => void;\r\n};\r\n\r\nexport const LangContext = createContext<LangContextType | undefined>(\r\n    undefined\r\n);\r\n"],"names":[],"mappings":";;;AACA;;AAOO,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EACnC","debugId":null}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///F:/MY%20CLASS/ALL%20OF%20MY%20PROJECTS/10_min_school_assesment/providers/lang-provider.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport Cookies from \"js-cookie\";\r\nimport { LangType } from \"@/types/types\";\r\nimport { LangContext } from \"@/context\";\r\n\r\n\r\nconst LangProvider = ({\r\n    lang: initialLang,\r\n    children,\r\n}: {\r\n    lang: LangType;\r\n    children: React.ReactNode;\r\n}) => {\r\n    const [lang, setLang] = useState<LangType>(initialLang);\r\n    const router = useRouter();\r\n\r\n    const toggleLang = useCallback(() => {\r\n        const newLang = lang === \"en\" ? \"bn\" : \"en\";\r\n        setLang(newLang);\r\n        Cookies.set(\"lang\", newLang, { expires: 7, sameSite: \"Lax\" });\r\n        router.refresh();\r\n    }, [lang, router]);\r\n\r\n    return (\r\n        <LangContext.Provider value={{ lang, toggleLang }}>\r\n            {children}\r\n        </LangContext.Provider>\r\n    );\r\n};\r\n\r\nexport default LangProvider;"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;AALA;;;;;;AAQA,MAAM,eAAe,CAAC,EAClB,MAAM,WAAW,EACjB,QAAQ,EAIX;IACG,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;IAC3C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC3B,MAAM,UAAU,SAAS,OAAO,OAAO;QACvC,QAAQ;QACR,qJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,QAAQ,SAAS;YAAE,SAAS;YAAG,UAAU;QAAM;QAC3D,OAAO,OAAO;IAClB,GAAG;QAAC;QAAM;KAAO;IAEjB,qBACI,8OAAC,gHAAA,CAAA,cAAW,CAAC,QAAQ;QAAC,OAAO;YAAE;YAAM;QAAW;kBAC3C;;;;;;AAGb;uCAEe","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///F:/MY%20CLASS/ALL%20OF%20MY%20PROJECTS/10_min_school_assesment/providers/providers.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\nimport LangProvider from \"./lang-provider\";\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\r\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools'\r\nexport const Providers = ({ children }: { children: React.ReactNode }) => {\r\n    const queryClient = new QueryClient();\r\n    return (\r\n        <QueryClientProvider client={queryClient}>\r\n            <ReactQueryDevtools initialIsOpen={false} />\r\n            <LangProvider lang=\"en\">\r\n                {children}\r\n            </LangProvider>\r\n        </QueryClientProvider>\r\n\r\n    );\r\n};"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AACA;AAJA;;;;;AAKO,MAAM,YAAY,CAAC,EAAE,QAAQ,EAAiC;IACjE,MAAM,cAAc,IAAI,6KAAA,CAAA,cAAW;IACnC,qBACI,8OAAC,sLAAA,CAAA,sBAAmB;QAAC,QAAQ;;0BACzB,8OAAC,oLAAA,CAAA,qBAAkB;gBAAC,eAAe;;;;;;0BACnC,8OAAC,8HAAA,CAAA,UAAY;gBAAC,MAAK;0BACd;;;;;;;;;;;;AAKjB","debugId":null}}]
}