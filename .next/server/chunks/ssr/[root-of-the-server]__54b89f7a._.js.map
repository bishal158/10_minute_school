{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///F:/MY%20CLASS/ALL%20OF%20MY%20PROJECTS/10_min_school_assesment/utils/api.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n// utils/api.ts\r\nimport getAxiosInstance from \"@/hooks/useAxios\"; // Renamed and modified version of useAxios\r\n\r\nimport { ApiResponse } from \"@/types/types\";\r\n\r\n// Server-compatible version (no hooks)\r\nexport const fetchProductDataServer = async (\r\n  lang: string = \"en\"\r\n): Promise<ApiResponse> => {\r\n  const url = `/products/ielts-course?lang=${lang}`;\r\n  const axiosInstance = useAxios();\r\n\r\n  try {\r\n    const response = await axiosInstance.get(url, {\r\n      headers: {\r\n        \"X-TENMS-SOURCE-PLATFORM\": \"web\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error: any) {\r\n    const status = error.response?.status;\r\n    throw new Error(\r\n      `API request failed${status ? ` with status ${status}` : \"\"}`\r\n    );\r\n  }\r\n};\r\n"],"names":[],"mappings":"AAAA,qDAAqD,GACrD,eAAe;;;;AAMR,MAAM,yBAAyB,OACpC,OAAe,IAAI;IAEnB,MAAM,MAAM,CAAC,4BAA4B,EAAE,MAAM;IACjD,MAAM,gBAAgB;IAEtB,IAAI;QACF,MAAM,WAAW,MAAM,cAAc,GAAG,CAAC,KAAK;YAC5C,SAAS;gBACP,2BAA2B;gBAC3B,QAAQ;YACV;QACF;QACA,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAY;QACnB,MAAM,SAAS,MAAM,QAAQ,EAAE;QAC/B,MAAM,IAAI,MACR,CAAC,kBAAkB,EAAE,SAAS,CAAC,aAAa,EAAE,QAAQ,GAAG,IAAI;IAEjE;AACF","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///F:/MY%20CLASS/ALL%20OF%20MY%20PROJECTS/10_min_school_assesment/app/%28root%29/page.tsx"],"sourcesContent":["import { useProductData } from '@/utils/api';\n\n\nconst Home = () => {\n  const { fetchProductData } = useProductData();\n  const getinitialData = async () => {\n    try {\n      const data = await fetchProductData();\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error fetching product data:\", error);\n    }\n  }\n  console.log(fetchProductData);\n  return (\n    <div>page</div>\n  )\n}\n\nexport default Home\n"],"names":[],"mappings":";;;;AAAA;;;AAGA,MAAM,OAAO;IACX,MAAM,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,4GAAA,CAAA,iBAAc,AAAD;IAC1C,MAAM,iBAAiB;QACrB,IAAI;YACF,MAAM,OAAO,MAAM;YACnB,QAAQ,GAAG,CAAC;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;QAChD;IACF;IACA,QAAQ,GAAG,CAAC;IACZ,qBACE,8OAAC;kBAAI;;;;;;AAET;uCAEe","debugId":null}}]
}