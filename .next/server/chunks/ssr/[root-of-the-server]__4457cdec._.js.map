{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///F:/MY%20CLASS/ALL%20OF%20MY%20PROJECTS/10_min_school_assesment/lib/api.ts"],"sourcesContent":["import axios from 'axios';\r\n// Create base instance\r\nconst api = axios.create({\r\n    baseURL: process.env.NEXT_PUBLIC_API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n    },\r\n});\r\n// Add interceptor to inject language\r\napi.interceptors.request.use(config => {\r\n    // For client-side requests, we'll get language from localStorage\r\n    // For server-side, we'll handle differently (shown later)\r\n    if (typeof window !== 'undefined') {\r\n        const lang = localStorage.getItem('lang') || 'en';\r\n        config.params = {\r\n            ...config.params,\r\n            lang,\r\n        };\r\n    }\r\n    return config;\r\n});\r\n\r\nexport default api;"],"names":[],"mappings":";;;AAAA;;AACA,uBAAuB;AACvB,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACrB,OAAO;IACP,SAAS;QACL,gBAAgB;QAChB,QAAQ;IACZ;AACJ;AACA,qCAAqC;AACrC,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IACzB,iEAAiE;IACjE,0DAA0D;IAC1D;;IAOA,OAAO;AACX;uCAEe","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///F:/MY%20CLASS/ALL%20OF%20MY%20PROJECTS/10_min_school_assesment/utils/api.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport api from \"@/lib/api\";\r\nimport { ApiResponse } from \"@/types/types\";\r\n\r\nexport const fetchProducts = async (\r\n    params?: Record<string, any>\r\n): Promise<ApiResponse> => {\r\n    // Check if running in browser environment before accessing localStorage\r\n    let lang = \"en\";\r\n    if (typeof window !== \"undefined\") {\r\n        lang = localStorage.getItem(\"lang\") || \"en\";\r\n    }\r\n    \r\n    const response = await api.get(\"/products/ielts-course\", {\r\n        headers: {\r\n            \"X-TENMS-SOURCE-PLATFORM\": \"web\",\r\n            Accept: \"application/json\",\r\n        },\r\n        params: { ...params, lang },\r\n    });\r\n    return response.data;\r\n};"],"names":[],"mappings":"AAAA,qDAAqD;;;AACrD;;AAGO,MAAM,gBAAgB,OACzB;IAEA,wEAAwE;IACxE,IAAI,OAAO;IACX;;IAIA,MAAM,WAAW,MAAM,0GAAA,CAAA,UAAG,CAAC,GAAG,CAAC,0BAA0B;QACrD,SAAS;YACL,2BAA2B;YAC3B,QAAQ;QACZ;QACA,QAAQ;YAAE,GAAG,MAAM;YAAE;QAAK;IAC9B;IACA,OAAO,SAAS,IAAI;AACxB","debugId":null}}]
}